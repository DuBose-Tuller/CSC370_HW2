Diversity of Population: https://link.springer.com/article/10.1007/s11047-014-9416-y Section 3.1
-use a heuristic for tree isomorphism with <depth, terminals, nonterminals>
    -at each generation, regenerate trees that have a 'shape' already represented in the population
-perform crossover only above a certain 'edit distance' threshold
    -count number of overlapped nodes that are different
-Some kind of entropy measure on the evaluations

Improving Crossover
-don't do it on parents with the same fitness (Gustafson 2005)
-don't do on two parents that have similar values evaluated on a small subset of the data (Uy 2009)
-pick a random spot in parent 1, but try all of the possible spots in parent 2, and keep the one with the best fitness (Majeed and Ryan 2007)
    -or really any kind of "try a bunch, keep the best" method

Reducing Bloat (section 4)
-Automatically assign a low fitness to individuals with a lot of nodes (Poli 2003)

Selection Algorithms
-currently we are doing tournament style, but each crossover operation can include many offspring
- we may also want to inject a handful of random trees (potentailly by replacing the worse ones)

Dealing with the dataset:
-Run for a few generations on a small subset of the dataset, then slowly expose it to more of the data
-other forms of scaling/normalization

Selection Pressure:
-maybe modify how we are weighting the dataset by 1/(MSE+PARSIMONY)

Overfitting:
-

Changes over time:
-focus more on mutation rather than crossover/diversity as we converge towards the solution